package com.mobisec.babyrev;

import android.content.Context;

/* loaded from: classes.dex */
public class FlagChecker {
    public static boolean checkFlag(Context ctx, String flag) {
        if (

            !flag.startsWith("MOBISEC{") ||
            new StringBuilder(flag).reverse().toString().charAt(0) != '}' ||
            flag.length() != 35 ||
            !flag.toLowerCase().substring(8).startsWith("this_is_") ||
            !new StringBuilder(flag).reverse().toString().toLowerCase().substring(1).startsWith(ctx.getString(R.string.last_part)) ||
            !bam(flag.toUpperCase().substring(18, 24)).equals("ERNYYL") ||
            flag.charAt(17) != '_' ||
            flag.charAt(24) != '_' ||
            flag.toLowerCase().charAt(16) != 'a' ||
            flag.toLowerCase().charAt(26) != 'a' ||
            flag.toUpperCase().charAt(25) != flag.toUpperCase().charAt(26) + 1) {
            
            return false;
        }
        return flag.substring(8, flag.length() - 1).matches(getR());
    }


//FLAG = MOBISEC{ThIs_iS_A_ReAlLy_bAsIc_rEv}
    //last_part = ver_cis #reversed  // sic_rev
//chars == 35
    //25th char = E
    //16th char == 26th char

    private static int getX() {
        return 2;
    }

    private static int getY() {
        return 3;
    }

    private static int getZ() {
        return 5;
    }


    private static String bam(String s) {
        String out = BuildConfig.FLAVOR;
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if (c >= 'a' && c <= 'm') {
                c = (char) (c + '\r'); //chr of '\r' is 13, so its increasing the character stored in c by 13. so it is rot13 cipher
            } else if (c >= 'A' && c <= 'M') {
                c = (char) (c + '\r');
            } else if (c >= 'n' && c <= 'z') {
                c = (char) (c - '\r');
            } else if (c >= 'N' && c <= 'Z') {
                c = (char) (c - '\r');
            }
            out = out + c;
        }
        return out;
    }

// it sets the 1st char to upper and !upper sets to lower(making the boolean upper to false). iterating it 26 times.

    public static String getR() {
        String r = BuildConfig.FLAVOR;
        boolean upper = true;
        for (int i = 0; i < 26; i++) {
            r = upper ? r + "[A-Z_]" : r + "[a-z_]";
            upper = !upper;
        }
        return r;
    }
}